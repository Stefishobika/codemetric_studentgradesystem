import java.util.ArrayList;
import java.util.Scanner;

class Book {
    private static int nextId = 1;
    private final int id;
    private String title;
    private String author;
    private boolean available;

    public Book(String title, String author) {
        this.id = nextId++;
        this.title = title;
        this.author = author;
        this.available = true;
    }

    public int getId() { return id; }
    public String getTitle() { return title; }
    public String getAuthor() { return author; }
    public boolean isAvailable() { return available; }

    public void borrow() { available = false; }
    public void returned() { available = true; }

    @Override
    public String toString() {
        return String.format("%-4d | %-30s | %-20s | %s", id, title, author, (available ? "Available" : "Borrowed"));
    }
}

public class LibrarySystem {
    private final ArrayList<Book> books = new ArrayList<>();
    private final Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        new LibrarySystem().run();
    }

    private void run() {
        seedSampleBooks();
        while (true) {
            showMenu();
            int choice = readInt("Choose option: ");
            switch (choice) {
                case 1 -> addBook();
                case 2 -> borrowBook();
                case 3 -> returnBook();
                case 4 -> displayBooks();
                case 5 -> {
                    System.out.println("Exiting library system. Goodbye!");
                    return;
                }
                default -> System.out.println("Invalid option. Try again.");
            }
        }
    }

    private void showMenu() {
        System.out.println("\n--- Library Management ---");
        System.out.println("1. Add Book");
        System.out.println("2. Borrow Book");
        System.out.println("3. Return Book");
        System.out.println("4. Display All Books");
        System.out.println("5. Exit");
    }

    private void addBook() {
        System.out.print("Title: ");
        String title = sc.nextLine().trim();
        System.out.print("Author: ");
        String author = sc.nextLine().trim();

        if (title.isEmpty() || author.isEmpty()) {
            System.out.println("Error: Title and author cannot be empty.");
            return;
        }

        books.add(new Book(title, author));
        System.out.println("Book added successfully.");
    }

    private void borrowBook() {
        displayBooks();
        int id = readInt("Enter book ID to borrow: ");
        Book b = findBookById(id);
        if (b == null) {
            System.out.println("Error: No book with ID " + id + ".");
            return;
        }
        if (!b.isAvailable()) {
            System.out.println("Error: Book is currently borrowed.");
            return;
        }
        b.borrow();
        System.out.println("You borrowed: " + b.getTitle());
    }

    private void returnBook() {
        displayBooks();
        int id = readInt("Enter book ID to return: ");
        Book b = findBookById(id);
        if (b == null) {
            System.out.println("Error: No book with ID " + id + ".");
            return;
        }
        if (b.isAvailable()) {
            System.out.println("Error: That book is not borrowed.");
            return;
        }
        b.returned();
        System.out.println("Book returned: " + b.getTitle());
    }

    private void displayBooks() {
        if (books.isEmpty()) {
            System.out.println("No books in library.");
            return;
        }
        System.out.println("\nID   | Title                          | Author              | Status");
        System.out.println("---------------------------------------------------------------------");
        for (Book b : books) System.out.println(b);
    }

    private Book findBookById(int id) {
        for (Book b : books) if (b.getId() == id) return b;
        return null;
    }

    private int readInt(String prompt) {
        while (true) {
            System.out.print(prompt);
            String line = sc.nextLine().trim();
            try {
                return Integer.parseInt(line);
            } catch (NumberFormatException e) {
                System.out.println("Please enter a valid integer.");
            }
        }
    }

    private void seedSampleBooks() {
        books.add(new Book("The Alchemist", "Paulo Coelho"));
        books.add(new Book("Clean Code", "Robert C. Martin"));
        books.add(new Book("Introduction to Algorithms", "Cormen et al."));
    }
}
