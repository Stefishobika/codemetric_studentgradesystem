import java.util.ArrayList;
import java.util.Scanner;
import java.util.Locale;

class Student {
    private static int nextId = 1;
    private final int id;
    private String name;
    private double marks; // assume marks out of 100
    private String grade;

    public Student(String name, double marks) {
        this.id = nextId++;
        this.name = name;
        this.marks = marks;
        this.grade = computeGrade(marks);
    }

    private String computeGrade(double m) {
        if (m < 0 || m > 100) return "Invalid";
        if (m >= 90) return "A+";
        if (m >= 80) return "A";
        if (m >= 70) return "B";
        if (m >= 60) return "C";
        if (m >= 50) return "D";
        return "F";
    }

    public void setMarks(double marks) {
        this.marks = marks;
        this.grade = computeGrade(marks);
    }

    public int getId() { return id; }
    public String getName() { return name; }
    public double getMarks() { return marks; }
    public String getGrade() { return grade; }

    @Override
    public String toString() {
        return String.format("%-4d | %-20s | %6.2f | %-3s", id, name, marks, grade);
    }
}

public class StudentGrades {
    private final ArrayList<Student> students = new ArrayList<>();
    private final Scanner sc = new Scanner(System.in).useLocale(Locale.US);

    public static void main(String[] args) {
        new StudentGrades().run();
    }

    private void run() {
        seedSampleStudents();
        while (true) {
            showMenu();
            int choice = readInt("Option: ");
            switch (choice) {
                case 1 -> addStudent();
                case 2 -> updateMarks();
                case 3 -> displayReport();
                case 4 -> {
                    System.out.println("Goodbye!");
                    return;
                }
                default -> System.out.println("Invalid choice.");
            }
        }
    }

    private void showMenu() {
        System.out.println("\n--- Student Grade Calculator ---");
        System.out.println("1. Add Student");
        System.out.println("2. Update Marks");
        System.out.println("3. Display Report (tabular)");
        System.out.println("4. Exit");
    }

    private void addStudent() {
        System.out.print("Student name: ");
        String name = sc.nextLine().trim();
        double marks = readDoubleInRange("Marks (0-100): ", 0, 100);
        students.add(new Student(name, marks));
        System.out.println("Student added.");
    }

    private void updateMarks() {
        displayReport();
        int id = readInt("Enter student ID to update: ");
        Student s = findById(id);
        if (s == null) {
            System.out.println("No student with ID " + id);
            return;
        }
        double marks = readDoubleInRange("New marks (0-100): ", 0, 100);
        s.setMarks(marks);
        System.out.println("Marks updated.");
    }

    private void displayReport() {
        if (students.isEmpty()) {
            System.out.println("No students available.");
            return;
        }
        System.out.println("\nID   | Name                 | Marks  | G");
        System.out.println("---------------------------------------------");
        for (Student s : students) System.out.println(s);
    }

    private Student findById(int id) {
        for (Student s : students) if (s.getId() == id) return s;
        return null;
    }

    private int readInt(String prompt) {
        while (true) {
            System.out.print(prompt);
            String line = sc.nextLine().trim();
            try { return Integer.parseInt(line); }
            catch (NumberFormatException e) { System.out.println("Please enter a valid integer."); }
        }
    }

    private double readDoubleInRange(String prompt, double min, double max) {
        while (true) {
            System.out.print(prompt);
            try {
                double v = Double.parseDouble(sc.nextLine().trim());
                if (v < min || v > max) {
                    System.out.printf("Value must be between %.2f and %.2f.%n", min, max);
                } else return v;
            } catch (NumberFormatException e) {
                System.out.println("Please enter a valid number (decimal allowed).");
            }
        }
    }

    private void seedSampleStudents() {
        students.add(new Student("Alice", 92));
        students.add(new Student("Bob", 76.5));
        students.add(new Student("Charlie", 58));
    }
}
